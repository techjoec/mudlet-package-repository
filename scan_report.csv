Package,File,Line,Category,Match,Address,Domain/IP,Domain Status,URI,Context
copyToAda.mpackage,config.lua,3,Network Identifiers,https://ada-young.com/pastebin/,ada-young.com,ada-young.com,Resolved,https://ada-young.com/pastebin/,mpackage = [[copyToAda]]\nauthor = [[Demonnic]]\ntitle = [[Copy selected text as HTML to https://ada-young.com/pastebin/ using https://ada-young.com/pastebin/api/v1/about ]]\nversion = [[1.0.0]]\ncreated = [[2024-12-28T04:18:51+0000]]
MudletWTTR.mpackage,config.lua,3,Network Identifiers,https://wttr.in,wttr.in,wttr.in,Resolved,https://wttr.in,mpackage = [[MudletWTTR]]\nauthor = [[Demonnic]]\ntitle = [[Get the weather from https://wttr.in in a miniconsole]]\nversion = [[1.0.0]]\ncreated = [[2021-09-01T16:55:46+0000]]
MedUI.mpackage,demontools.lua,61,Network Identifiers,http://www.w3.org/TR/html4/loose.dtd,www.w3.org,www.w3.org,Resolved,http://www.w3.org/TR/html4/loose.dtd,"\nlocal htmlHeader = [=[  <!DOCTYPE HTML PUBLIC ""-//W3C//DTD HTML 4.01 Transitional//EN""\n""http://www.w3.org/TR/html4/loose.dtd"">\n<html>\n  <head>"
MedUI.mpackage,demontools.lua,65,Network Identifiers,http://fonts.googleapis.com/css?family=Droid+Sans+Mono,fonts.googleapis.com,fonts.googleapis.com,Resolved,http://fonts.googleapis.com/css?family=Droid+Sans+Mono,"  <head>\n    <meta http-equiv=""Content-Type"" content=""text/html;charset=utf-8"" >\n    <link href='http://fonts.googleapis.com/css?family=Droid+Sans+Mono' rel='stylesheet' type='text/css'>\n    <style type=""text/css"">\n      body {"
MedUI.mpackage,demontools.lua,79,Network Identifiers,http://www.w3.org/TR/html4/loose.dtd,www.w3.org,www.w3.org,Resolved,http://www.w3.org/TR/html4/loose.dtd,"\nlocal htmlHeaderPattern = [=[  <!DOCTYPE HTML PUBLIC ""%-//W3C//DTD HTML 4.01 Transitional//EN""\n""http://www.w3.org/TR/html4/loose.dtd"">\n<html>\n  <head>"
MedUI.mpackage,demontools.lua,83,Network Identifiers,http://fonts.googleapis.com/css%?family=Droid%+Sans%+Mono,fonts.googleapis.com,fonts.googleapis.com,Resolved,http://fonts.googleapis.com/css%?family=Droid%+Sans%+Mono,"  <head>\n    <meta http%-equiv=""Content%-Type"" content=""text/html;charset=utf%-8"" >\n    <link href='http://fonts.googleapis.com/css%?family=Droid%+Sans%+Mono' rel='stylesheet' type='text/css'>\n    <style type=""text/css"">\n      body {"
MedUI.mpackage,demontools.lua,98,Unsafe Inputs,loadstring(,,,,,"\nlocal function getValueAt(accessString)\n  local ok, err = pcall(loadstring(""return "" .. tostring(accessString)))\n  if ok then return err end\n  return nil, err"
MedUI.mpackage,emco.lua,1261,Network Identifiers,https://wiki.mudlet.org/w/Manual:Lua_Functions#getTime,wiki.mudlet.org,wiki.mudlet.org,Resolved,https://wiki.mudlet.org/w/Manual:Lua_Functions#getTime,"    if strippedFormat ~= """" then\n      self.ae(funcName,\n              ""format contains invalid time format characters. Please see https://wiki.mudlet.org/w/Manual:Lua_Functions#getTime for formatting information"")\n    else\n      self.timestampFormat = format"
MedUI.mpackage,emco.lua,2229,Unsafe Inputs,load(,,,,,"  \n  \n  function EMCO:load()\n    local dirname = getMudletHomeDir() .. ""/EMCO/""\n    local filename = dirname .. self.name .. "".lua"""
MedUI.mpackage,emco.lua,2234,Unsafe Inputs,load(,,,,,"    local configTable = {}\n    if io.exists(filename) then\n      table.load(filename, configTable)\n    else\n      debugc(string.format(""Attempted to load config for EMCO named %s but the file could not be found. Filename: %s"", self.name, filename))"
i18n-support-for-mudlet-scripts.mpackage,i18n/init.lua,174,Unsafe Inputs,load(,,,,,"end\n\nfunction i18n.load(data)\n  recursiveLoad(nil, data)\nend"
i18n-support-for-mudlet-scripts.mpackage,i18n/init.lua,179,Unsafe Inputs,loadfile(,,,,,\nfunction i18n.loadFile(path)\n  local chunk = assert(loadfile(path))\n  local data = chunk()\n  i18n.load(data)
i18n-support-for-mudlet-scripts.mpackage,i18n/init.lua,181,Unsafe Inputs,load(,,,,,  local chunk = assert(loadfile(path))\n  local data = chunk()\n  i18n.load(data)\nend\n
Achaean System.mpackage,curing/remedies.lua,585,Unsafe Inputs,dofile(,,,,,"\n    \n    dofile(getMudletHomeDir() .. ""/Achaean System/curing/remedies.lua"")\n\n    "
Achaean System.mpackage,defenses/defenses.lua,347,Unsafe Inputs,dofile(,,,,,"\n    \n    dofile(getMudletHomeDir() .. ""/Achaean System/defenses/defenses.lua"")  \n\n    "
Achaean System.mpackage,hunting/hunting.lua,2185,Unsafe Inputs,dofile(,,,,,"	\nfunction reloadHuntingFile()	\n  dofile(getMudletHomeDir() .. ""/Achaean System/hunting/hunting.lua"")  \n  echo(""\nHunting Loaded"")\nend"
Achaean System.mpackage,system/libs/deps/dkjson.lua,14,Network Identifiers,http://dkolf.de/dkjson-lua/>.,dkolf.de,dkolf.de,Resolved,http://dkolf.de/dkjson-lua/>.,\nFor the documentation see the corresponding readme.txt or visit\n<http://dkolf.de/dkjson-lua/>.\n\nYou can contact the author by sending an e-mail to 'david' at the
Achaean System.mpackage,system/libs/deps/preferences.lua,133,Unsafe Inputs,load(,,,,,"  \n  \n  function preferences.load(pkg, file, defaults) end\n\n  "
Achaean System.mpackage,system/libs/deps/version.lua,1,Network Identifiers,2.00.00.05,2.00.00.05,2.00.00.05,Resolved,,return '2.00.00.05-pre-master'
Achaean System.mpackage,system/libs/luarocks/admin/index.lua,64,Network Identifiers,http://www.luarocks.org,www.luarocks.org,www.luarocks.org,Resolved,http://www.luarocks.org,"<h1>Available rocks</h1>\n<p>\nLua modules available from this location for use with <a href=""http://www.luarocks.org"">LuaRocks</a>:\n</p>\n<table class=""main"">"
Achaean System.mpackage,system/libs/luarocks/cmd.lua,175,Network Identifiers,https://github.com/luarocks/luarocks/issues).\n,github.com,github.com,Resolved,https://github.com/luarocks/luarocks/issues).\n,"   end\n   return debug.traceback(""LuaRocks ""..cfg.program_version..\n      "" bug (please report at https://github.com/luarocks/luarocks/issues).\n""..\n      mode..""\n""..err, 2)\nend"
Achaean System.mpackage,system/libs/luarocks/cmd.lua,254,Unsafe Inputs,loadfile(,,,,,"         for _, d in ipairs(dirs) do\n            local f = dir.path(d, ""default-lua-version.lua"")\n            local mod, err = loadfile(f, ""t"")\n            if mod then\n               local pok, ver = pcall(mod)"
Achaean System.mpackage,system/libs/luarocks/cmd/config.lua,50,Network Identifiers,https://github.com/luarocks/luarocks/wiki/Config-file-format,github.com,github.com,Resolved,https://github.com/luarocks/luarocks/wiki/Config-file-format,"\n  Example: luarocks config]], util.see_also([[\n   https://github.com/luarocks/luarocks/wiki/Config-file-format\n   for detailed information on the LuaRocks config file format.\n]]))"
Achaean System.mpackage,system/libs/luarocks/cmd/write_rockspec.lua,124,Process Spawning,io.popen(,,,,,"   local function detect_url_from_command(program, args, directory)\n      local command = fs.Q(cfg.variables[program:upper()]).. "" ""..args\n      local pipe = io.popen(fs.command_at(directory, fs.quiet_stderr(command)))\n      if not pipe then return nil end\n      local url = pipe:read(""*a""):match(""^([^\r\n]+)"")"
Achaean System.mpackage,system/libs/luarocks/core/cfg.lua,205,Network Identifiers,https://luarocks.org,luarocks.org,luarocks.org,Resolved,https://luarocks.org,"      rocks_servers = {\n         {\n           ""https://luarocks.org"",\n           ""https://raw.githubusercontent.com/rocks-moonscript-org/moonrocks-mirror/master/"",\n           ""https://loadk.com/luarocks/"","
Achaean System.mpackage,system/libs/luarocks/core/cfg.lua,206,Network Identifiers,https://raw.githubusercontent.com/rocks-moonscript-org/moonrocks-mirror/master/,raw.githubusercontent.com,raw.githubusercontent.com,Publicly Writable,https://raw.githubusercontent.com/rocks-moonscript-org/moonrocks-mirror/master/,"         {\n           ""https://luarocks.org"",\n           ""https://raw.githubusercontent.com/rocks-moonscript-org/moonrocks-mirror/master/"",\n           ""https://loadk.com/luarocks/"",\n         }"
Achaean System.mpackage,system/libs/luarocks/core/cfg.lua,207,Network Identifiers,https://loadk.com/luarocks/,loadk.com,loadk.com,Resolved,https://loadk.com/luarocks/,"           ""https://luarocks.org"",\n           ""https://raw.githubusercontent.com/rocks-moonscript-org/moonrocks-mirror/master/"",\n           ""https://loadk.com/luarocks/"",\n         }\n      },"
Achaean System.mpackage,system/libs/luarocks/core/cfg.lua,213,Network Identifiers,https://luarocks.org,luarocks.org,luarocks.org,Resolved,https://luarocks.org,"\n      upload = {\n         server = ""https://luarocks.org"",\n         tool_version = ""1.0.0"",\n         api_version = ""1"","
Achaean System.mpackage,system/libs/luarocks/core/cfg.lua,444,Process Spawning,io.popen(,,,,,"         \n         \n         local pipe = io.popen(""cygpath \n         local mingw_prefix = pipe:read(""*l"")\n         pipe:close()"
Achaean System.mpackage,system/libs/luarocks/core/persist.lua,26,Unsafe Inputs,loadstring(,,,,,"   local chunk, ran\n   if _VERSION == ""Lua 5.1"" then \n      chunk, err = loadstring(str, filename)\n      if chunk then\n         setfenv(chunk, env)"
Achaean System.mpackage,system/libs/luarocks/core/persist.lua,32,Unsafe Inputs,load(,,,,,"      end\n   else \n      chunk, err = load(str, filename, ""t"", env)\n      if chunk then\n         ran, err = pcall(chunk)"
Achaean System.mpackage,system/libs/luarocks/core/util.lua,20,Process Spawning,os.execute(,,,,,"                   and (os.getenv(""TMP"") .. ""/luarocks-"" .. tostring(math.floor(math.random() * 10000)))\n                   or os.tmpname()\n   os.execute(cmd .. "" > "" .. tmpfile)\n   local fd = io.open(tmpfile, ""rb"")\n   if not fd then"
Achaean System.mpackage,system/libs/luarocks/deplocks.lua,32,Unsafe Inputs,load(,,,,,"end\n\nfunction deplocks.load(root_rock_name, dirname)\n   if deptable_mode ~= ""start"" then\n      return true, nil"
Achaean System.mpackage,system/libs/luarocks/deps.lua,297,Unsafe Inputs,load(,,,,,"   local rocks_provided = rockspec.rocks_provided\n\n   local ok, filename, err = deplocks.load(name, deplock_dir or ""."")\n   if filename then\n      util.printout(""Using dependencies pinned in lockfile: "" .. filename)"
Achaean System.mpackage,system/libs/luarocks/fetch/git.lua,19,Process Spawning,io.popen(,,,,,local function git_version(git_cmd)\n   if not cached_git_version then\n      local version_line = io.popen(fs.Q(git_cmd)..' \n      local version_string = version_line:match('%d-%.%d+%.?%d*')\n      cached_git_version = vers.parse_version(version_string)
Achaean System.mpackage,system/libs/luarocks/fetch/git.lua,64,Process Spawning,io.popen(,,,,,"      return nil\n   end\n   local pd = io.popen(fs.command_at(fs.current_dir(), fs.Q(git_cmd).."" log \n   if not pd then\n      return nil"
Achaean System.mpackage,system/libs/luarocks/fetch/sscm.lua,27,Process Spawning,io.popen(,,,,,"   \n   local working_dir\n   local tmp = io.popen(string.format(sscm_cmd..[[ property ""/"" -d -b%s -p%s]], branch, repository))\n   for line in tmp:lines() do\n      "
Achaean System.mpackage,system/libs/luarocks/fs/lua.lua,328,Process Spawning,os.execute(,,,,,\nfunction fs_lua.execute_string(cmd)\n   local code = os.execute(cmd)\n   return (code == 0 or code == true)\nend
Achaean System.mpackage,system/libs/luarocks/fs/lua.lua,1261,Unsafe Inputs,loadfile(,,,,,"  local lua = fs.Q(cfg.variables.LUA)  \n  \n  local result = fs.execute_string(lua..[[ -e ""if loadfile(']]..filename..[[') then os.exit(0) else os.exit(1) end""]])\n  return (result == true)\nend"
Achaean System.mpackage,system/libs/luarocks/fs/tools.lua,58,Process Spawning,io.popen(,,,,,"      local current = cache_pwd\n      if not current then\n         local pipe = io.popen(fs.quiet_stderr(vars.PWD))\n         current = pipe:read(""*a""):gsub(""^%s*"", """"):gsub(""%s*$"", """")\n         pipe:close()"
Achaean System.mpackage,system/libs/luarocks/fs/tools.lua,121,Process Spawning,os.execute(,,,,,"      cmd = fs.command_at(current, cmd)\n   end\n   local code = os.execute(cmd)\n   if code == 0 or code == true then\n      return true"
Achaean System.mpackage,system/libs/luarocks/fs/tools.lua,134,Process Spawning,io.popen(,,,,,"\nfunction tools.dir_iterator(at)\n   local pipe = io.popen(fs.command_at(at, vars.LS, true))\n   for file in pipe:lines() do\n      if file ~= ""."" and file ~= "".."" then"
Achaean System.mpackage,system/libs/luarocks/fs/tools.lua,209,Process Spawning,io.popen(,,,,,"   end\n\n   local pipe = io.popen(md5checker.."" ""..fs.Q(fs.absolute_name(file)))\n   local computed = pipe:read(""*l"")\n   pipe:close()"
Achaean System.mpackage,system/libs/luarocks/fs/unix/tools.lua,117,Process Spawning,io.popen(,,,,,"   end\n   local result = {}\n   local pipe = io.popen(fs.command_at(at, fs.quiet_stderr(vars.FIND.."" *"")))\n   for file in pipe:lines() do\n      table.insert(result, file)"
Achaean System.mpackage,system/libs/luarocks/fs/unix/tools.lua,200,Process Spawning,io.popen(,,,,,"         return umask_cache\n      end\n      local fd = assert(io.popen(""umask -S""))\n      local umask = assert(fd:read(""*a""))\n      fd:close()"
Achaean System.mpackage,system/libs/luarocks/fs/unix/tools.lua,263,Process Spawning,io.popen(,,,,,"\n   local template = (os.getenv(""TMPDIR"") or ""/tmp"") .. ""/luarocks_"" .. name_pattern:gsub(""/"", ""_"") .. ""-XXXXXX""\n   local pipe = io.popen(vars.MKTEMP.."" -d ""..fs.Q(template))\n   local dirname = pipe:read(""*l"")\n   pipe:close()"
Achaean System.mpackage,system/libs/luarocks/fs/unix/tools.lua,301,Process Spawning,io.popen(,,,,,"      return user\n   end\n   local pd = io.popen(""whoami"", ""r"")\n   if not pd then\n      return """""
Achaean System.mpackage,system/libs/luarocks/fs/win32/tools.lua,131,Process Spawning,io.popen(,,,,,"   end\n   local result = {}\n   local pipe = io.popen(fs.command_at(at, fs.quiet_stderr(vars.FIND), true))\n   for file in pipe:lines() do\n      "
Achaean System.mpackage,system/libs/luarocks/fs/win32/tools.lua,224,Process Spawning,io.popen(,,,,,"   }\n   local result = {}\n   local fd = assert(io.popen(""wmic UserAccount get name""))\n   for user in fd:lines() do\n      user = user:gsub(""%s+$"", """")"
Achaean System.mpackage,system/libs/luarocks/vendor/dkjson.lua,14,Network Identifiers,http://dkolf.de/src/dkjson-lua.fsl/>.,dkolf.de,dkolf.de,Resolved,http://dkolf.de/src/dkjson-lua.fsl/>.,\nFor the documentation see the corresponding readme.txt or visit\n<http://dkolf.de/src/dkjson-lua.fsl/>.\n\nYou can contact the author by sending an e-mail to 'david' at the
Achaean System.mpackage,system/system.lua,200,Unsafe Inputs,dofile(,,,,,"function reloadSystem()\n  \n  dofile(getMudletHomeDir() .. ""/Achaean System/system/system.lua"")\n  cecho(""\n<green>Configuration File Loaded.\n"")\nend"
MDK.mpackage,demontools.lua,61,Network Identifiers,http://www.w3.org/TR/html4/loose.dtd,www.w3.org,www.w3.org,Resolved,http://www.w3.org/TR/html4/loose.dtd,"\nlocal htmlHeader = [=[  <!DOCTYPE HTML PUBLIC ""-//W3C//DTD HTML 4.01 Transitional//EN""\n""http://www.w3.org/TR/html4/loose.dtd"">\n<html>\n  <head>"
MDK.mpackage,demontools.lua,65,Network Identifiers,http://fonts.googleapis.com/css?family=Droid+Sans+Mono,fonts.googleapis.com,fonts.googleapis.com,Resolved,http://fonts.googleapis.com/css?family=Droid+Sans+Mono,"  <head>\n    <meta http-equiv=""Content-Type"" content=""text/html;charset=utf-8"" >\n    <link href='http://fonts.googleapis.com/css?family=Droid+Sans+Mono' rel='stylesheet' type='text/css'>\n    <style type=""text/css"">\n      body {"
MDK.mpackage,demontools.lua,79,Network Identifiers,http://www.w3.org/TR/html4/loose.dtd,www.w3.org,www.w3.org,Resolved,http://www.w3.org/TR/html4/loose.dtd,"\nlocal htmlHeaderPattern = [=[  <!DOCTYPE HTML PUBLIC ""%-//W3C//DTD HTML 4.01 Transitional//EN""\n""http://www.w3.org/TR/html4/loose.dtd"">\n<html>\n  <head>"
MDK.mpackage,demontools.lua,83,Network Identifiers,http://fonts.googleapis.com/css%?family=Droid%+Sans%+Mono,fonts.googleapis.com,fonts.googleapis.com,Resolved,http://fonts.googleapis.com/css%?family=Droid%+Sans%+Mono,"  <head>\n    <meta http%-equiv=""Content%-Type"" content=""text/html;charset=utf%-8"" >\n    <link href='http://fonts.googleapis.com/css%?family=Droid%+Sans%+Mono' rel='stylesheet' type='text/css'>\n    <style type=""text/css"">\n      body {"
MDK.mpackage,demontools.lua,98,Unsafe Inputs,loadstring(,,,,,"\nlocal function getValueAt(accessString)\n  local ok, err = pcall(loadstring(""return "" .. tostring(accessString)))\n  if ok then return err end\n  return nil, err"
MDK.mpackage,echofile.lua,15,Unsafe Inputs,loadstring(,,,,,"if _VERSION == ""Lua 5.1"" then\n  load = function(code, name, _, env)\n    local fn, err = loadstring(code, name)\n    if fn then\n      setfenv(fn, env)"
MDK.mpackage,echofile.lua,46,Unsafe Inputs,load(,,,,,"      end,\n    })\n    local fn, err = load(""return "" .. code, ""expression `"" .. code .. ""`"", ""t"", exp_env)\n    if fn then\n      return tostring(fn())"
MDK.mpackage,emco.lua,1261,Network Identifiers,https://wiki.mudlet.org/w/Manual:Lua_Functions#getTime,wiki.mudlet.org,wiki.mudlet.org,Resolved,https://wiki.mudlet.org/w/Manual:Lua_Functions#getTime,"  if strippedFormat ~= """" then\n    self.ae(funcName,\n            ""format contains invalid time format characters. Please see https://wiki.mudlet.org/w/Manual:Lua_Functions#getTime for formatting information"")\n  else\n    self.timestampFormat = format"
MDK.mpackage,emco.lua,2229,Unsafe Inputs,load(,,,,,"\n\nfunction EMCO:load()\n  local dirname = getMudletHomeDir() .. ""/EMCO/""\n  local filename = dirname .. self.name .. "".lua"""
MDK.mpackage,emco.lua,2234,Unsafe Inputs,load(,,,,,"  local configTable = {}\n  if io.exists(filename) then\n    table.load(filename, configTable)\n  else\n    debugc(string.format(""Attempted to load config for EMCO named %s but the file could not be found. Filename: %s"", self.name, filename))"
MDK.mpackage,loginator.lua,59,Network Identifiers,http://www.w3.org/TR/html4/loose.dtd,www.w3.org,www.w3.org,Resolved,http://www.w3.org/TR/html4/loose.dtd,"\nlocal htmlHeaderTemplate = [=[  <!DOCTYPE HTML PUBLIC ""-//W3C//DTD HTML 4.01 Transitional//EN""\n""http://www.w3.org/TR/html4/loose.dtd"">\n<html>\n  <head>"
MDK.mpackage,loginator.lua,63,Network Identifiers,http://fonts.googleapis.com/css?family=Droid+Sans+Mono,fonts.googleapis.com,fonts.googleapis.com,Resolved,http://fonts.googleapis.com/css?family=Droid+Sans+Mono,"  <head>\n    <meta http-equiv=""Content-Type"" content=""text/html;charset=utf-8"" >\n    <link href='http://fonts.googleapis.com/css?family=Droid+Sans+Mono' rel='stylesheet' type='text/css'>\n    <style type=""text/css"">\n      body {"
MDK.mpackage,loginator.lua,410,External Communications,openUrl(,,,,,\nfunction Loginator:open()\n  openUrl(self:getFullFilename())\nend\n
MDK.mpackage,loginator.lua,415,External Communications,openUrl(,,,,,\nfunction Loginator:openDir()\n  openUrl(self:getPath())\nend\n
MDK.mpackage,spinbox.lua,16,Network Identifiers,https://demonnic.github.io/image-assets/uparrow.png,demonnic.github.io,demonnic.github.io,Publicly Writable,https://demonnic.github.io/image-assets/uparrow.png,"  inactiveButtonColor = ""DimGray"",\n  integer = true,\n  upArrowLocation = ""https://demonnic.github.io/image-assets/uparrow.png"",\n  downArrowLocation = ""https://demonnic.github.io/image-assets/downarrow.png"",\n  color = ""#202020"""
MDK.mpackage,spinbox.lua,17,Network Identifiers,https://demonnic.github.io/image-assets/downarrow.png,demonnic.github.io,demonnic.github.io,Publicly Writable,https://demonnic.github.io/image-assets/downarrow.png,"  integer = true,\n  upArrowLocation = ""https://demonnic.github.io/image-assets/uparrow.png"",\n  downArrowLocation = ""https://demonnic.github.io/image-assets/downarrow.png"",\n  color = ""#202020""\n}"
MDK.mpackage,spinbox.lua,309,External Communications,downloadFile(,,,,,"    end\n    if upURL:match(""^http"") then\n      self:downloadFile(upURL, upFile)\n    elseif io.exists(upURL) then\n      upFile = upURL"
MDK.mpackage,spinbox.lua,323,External Communications,downloadFile(,,,,,"    end\n    if downURL:match(""^http"") then\n      self:downloadFile(downURL, downFile)\n    elseif io.exists(downURL) then\n      downFile = downURL"
MDK.mpackage,spinbox.lua,346,External Communications,downloadFile(,,,,,"\n\nfunction spinbox:downloadFile(url, fileName)\n  local parts = fileName:split(""/"")\n  parts[#parts] = nil"
MDK.mpackage,spinbox.lua,371,External Communications,downloadFile(,,,,,"  registerNamedEventHandler(uname, handlerName .. ""done"", ""sysDownloadDone"", handler, true)\n  registerNamedEventHandler(uname, handlerName .. ""error"", ""sysDownloadError"", handler, true)\n  downloadFile(fileName, url)\nend\n"
MDK.mpackage,spinbox.lua,379,Unsafe Inputs,load(,,,,,"  local locations = {}\n  if io.exists(saveFile) then\n    table.load(saveFile, locations)\n  end\n  return locations"
MDK.mpackage,sug.lua,20,Unsafe Inputs,loadstring(,,,,,"\nlocal function getValueAt(accessString)\n  local ok, err = pcall(loadstring(""return "" .. tostring(accessString)))\n  if ok then return err end\n  return nil, err"
MDK.mpackage,timergauge.lua,236,Unsafe Inputs,loadstring(,,,,,"  local hooktype = type(hook)\n  if hooktype == ""string"" then\n    local f, e = loadstring(""return "" .. hook)\n    if not f then\n      f, e = loadstring(hook)"
MDK.mpackage,timergauge.lua,238,Unsafe Inputs,loadstring(,,,,,"    local f, e = loadstring(""return "" .. hook)\n    if not f then\n      f, e = loadstring(hook)\n    end\n    if not f then"
AchaeaChatTabs.mpackage,demontools.lua,61,Network Identifiers,http://www.w3.org/TR/html4/loose.dtd,www.w3.org,www.w3.org,Resolved,http://www.w3.org/TR/html4/loose.dtd,"\nlocal htmlHeader = [=[  <!DOCTYPE HTML PUBLIC ""-//W3C//DTD HTML 4.01 Transitional//EN""\n""http://www.w3.org/TR/html4/loose.dtd"">\n<html>\n  <head>"
AchaeaChatTabs.mpackage,demontools.lua,65,Network Identifiers,http://fonts.googleapis.com/css?family=Droid+Sans+Mono,fonts.googleapis.com,fonts.googleapis.com,Resolved,http://fonts.googleapis.com/css?family=Droid+Sans+Mono,"  <head>\n    <meta http-equiv=""Content-Type"" content=""text/html;charset=utf-8"" >\n    <link href='http://fonts.googleapis.com/css?family=Droid+Sans+Mono' rel='stylesheet' type='text/css'>\n    <style type=""text/css"">\n      body {"
AchaeaChatTabs.mpackage,demontools.lua,79,Network Identifiers,http://www.w3.org/TR/html4/loose.dtd,www.w3.org,www.w3.org,Resolved,http://www.w3.org/TR/html4/loose.dtd,"\nlocal htmlHeaderPattern = [=[  <!DOCTYPE HTML PUBLIC ""%-//W3C//DTD HTML 4.01 Transitional//EN""\n""http://www.w3.org/TR/html4/loose.dtd"">\n<html>\n  <head>"
AchaeaChatTabs.mpackage,demontools.lua,83,Network Identifiers,http://fonts.googleapis.com/css%?family=Droid%+Sans%+Mono,fonts.googleapis.com,fonts.googleapis.com,Resolved,http://fonts.googleapis.com/css%?family=Droid%+Sans%+Mono,"  <head>\n    <meta http%-equiv=""Content%-Type"" content=""text/html;charset=utf%-8"" >\n    <link href='http://fonts.googleapis.com/css%?family=Droid%+Sans%+Mono' rel='stylesheet' type='text/css'>\n    <style type=""text/css"">\n      body {"
AchaeaChatTabs.mpackage,emco.lua,1261,Network Identifiers,https://wiki.mudlet.org/w/Manual:Lua_Functions#getTime,wiki.mudlet.org,wiki.mudlet.org,Resolved,https://wiki.mudlet.org/w/Manual:Lua_Functions#getTime,"  if strippedFormat ~= """" then\n    self.ae(funcName,\n            ""format contains invalid time format characters. Please see https://wiki.mudlet.org/w/Manual:Lua_Functions#getTime for formatting information"")\n  else\n    self.timestampFormat = format"
AchaeaChatTabs.mpackage,emco.lua,2229,Unsafe Inputs,load(,,,,,"\n\nfunction EMCO:load()\n  local dirname = getMudletHomeDir() .. ""/EMCO/""\n  local filename = dirname .. self.name .. "".lua"""
AchaeaChatTabs.mpackage,emco.lua,2234,Unsafe Inputs,load(,,,,,"  local configTable = {}\n  if io.exists(filename) then\n    table.load(filename, configTable)\n  else\n    debugc(string.format(""Attempted to load config for EMCO named %s but the file could not be found. Filename: %s"", self.name, filename))"
PRS.mpackage,AdjustableTabWindow.lua,1114,Unsafe Inputs,load(,,,,,"\n\nfunction Adjustable.TabWindow:load(slot, dir)\n    if type(self) ~= ""table"" then\n        dir = slot"
PRS.mpackage,AdjustableTabWindow.lua,1128,Unsafe Inputs,load(,,,,,"    local mytable = {}\n    if io.exists(loadDir) then\n        table.load(loadDir, mytable)\n    else\n        return ""No saved settings found at: "" .. loadDir"
PRS.mpackage,AdjustableTabWindow.lua,1163,Unsafe Inputs,load(,,,,,"                tempStyleWindow:createTempWindow(nil, k)\n            end\n            Adjustable.TabWindow.all[k].container.container:load(slot, dir)\n            if v.windowname ~= ""main"" then\n                Adjustable.TabWindow.all[k].container.container:changeContainer("
PRS.mpackage,AdjustableTabWindow.lua,1212,Unsafe Inputs,load(,,,,,"                    end\n                    \n                    myTab:load(slot, dir)\n                end\n            end"
PRS.mpackage,AdjustableTabWindow.lua,1353,Unsafe Inputs,load(,,,,,"    end\n    emco.load = function(s, slot, dir)\n        EMCO.load(s)\n        self:load(slot, dir)\n    end"
PRS.mpackage,AdjustableTabWindow.lua,1354,Unsafe Inputs,load(,,,,,"    emco.load = function(s, slot, dir)\n        EMCO.load(s)\n        self:load(slot, dir)\n    end\nend"
PRS.mpackage,demontools.lua,61,Network Identifiers,http://www.w3.org/TR/html4/loose.dtd,www.w3.org,www.w3.org,Resolved,http://www.w3.org/TR/html4/loose.dtd,"\nlocal htmlHeader = [=[  <!DOCTYPE HTML PUBLIC ""-//W3C//DTD HTML 4.01 Transitional//EN""\n""http://www.w3.org/TR/html4/loose.dtd"">\n<html>\n  <head>"
PRS.mpackage,demontools.lua,65,Network Identifiers,http://fonts.googleapis.com/css?family=Droid+Sans+Mono,fonts.googleapis.com,fonts.googleapis.com,Resolved,http://fonts.googleapis.com/css?family=Droid+Sans+Mono,"  <head>\n    <meta http-equiv=""Content-Type"" content=""text/html;charset=utf-8"" >\n    <link href='http://fonts.googleapis.com/css?family=Droid+Sans+Mono' rel='stylesheet' type='text/css'>\n    <style type=""text/css"">\n      body {"
PRS.mpackage,demontools.lua,79,Network Identifiers,http://www.w3.org/TR/html4/loose.dtd,www.w3.org,www.w3.org,Resolved,http://www.w3.org/TR/html4/loose.dtd,"\nlocal htmlHeaderPattern = [=[  <!DOCTYPE HTML PUBLIC ""%-//W3C//DTD HTML 4.01 Transitional//EN""\n""http://www.w3.org/TR/html4/loose.dtd"">\n<html>\n  <head>"
PRS.mpackage,demontools.lua,83,Network Identifiers,http://fonts.googleapis.com/css%?family=Droid%+Sans%+Mono,fonts.googleapis.com,fonts.googleapis.com,Resolved,http://fonts.googleapis.com/css%?family=Droid%+Sans%+Mono,"  <head>\n    <meta http%-equiv=""Content%-Type"" content=""text/html;charset=utf%-8"" >\n    <link href='http://fonts.googleapis.com/css%?family=Droid%+Sans%+Mono' rel='stylesheet' type='text/css'>\n    <style type=""text/css"">\n      body {"
PRS.mpackage,demontools.lua,98,Unsafe Inputs,loadstring(,,,,,"\nlocal function getValueAt(accessString)\n  local ok, err = pcall(loadstring(""return "" .. tostring(accessString)))\n  if ok then return err end\n  return nil, err"
PRS.mpackage,emco.lua,1261,Network Identifiers,https://wiki.mudlet.org/w/Manual:Lua_Functions#getTime,wiki.mudlet.org,wiki.mudlet.org,Resolved,https://wiki.mudlet.org/w/Manual:Lua_Functions#getTime,"  if strippedFormat ~= """" then\n    self.ae(funcName,\n            ""format contains invalid time format characters. Please see https://wiki.mudlet.org/w/Manual:Lua_Functions#getTime for formatting information"")\n  else\n    self.timestampFormat = format"
PRS.mpackage,emco.lua,2229,Unsafe Inputs,load(,,,,,"\n\nfunction EMCO:load()\n  local dirname = getMudletHomeDir() .. ""/EMCO/""\n  local filename = dirname .. self.name .. "".lua"""
PRS.mpackage,emco.lua,2234,Unsafe Inputs,load(,,,,,"  local configTable = {}\n  if io.exists(filename) then\n    table.load(filename, configTable)\n  else\n    debugc(string.format(""Attempted to load config for EMCO named %s but the file could not be found. Filename: %s"", self.name, filename))"
PRS.mpackage,sug.lua,20,Unsafe Inputs,loadstring(,,,,,"\nlocal function getValueAt(accessString)\n  local ok, err = pcall(loadstring(""return "" .. tostring(accessString)))\n  if ok then return err end\n  return nil, err"
LusterniaChatTabs.mpackage,demontools.lua,70,Network Identifiers,http://www.w3.org/TR/html4/loose.dtd,www.w3.org,www.w3.org,Resolved,http://www.w3.org/TR/html4/loose.dtd,"\nlocal htmlHeader = [=[  <!DOCTYPE HTML PUBLIC ""-//W3C//DTD HTML 4.01 Transitional//EN""\n""http://www.w3.org/TR/html4/loose.dtd"">\n<html>\n  <head>"
LusterniaChatTabs.mpackage,demontools.lua,74,Network Identifiers,http://fonts.googleapis.com/css?family=Droid+Sans+Mono,fonts.googleapis.com,fonts.googleapis.com,Resolved,http://fonts.googleapis.com/css?family=Droid+Sans+Mono,"  <head>\n    <meta http-equiv=""Content-Type"" content=""text/html;charset=utf-8"" >\n    <link href='http://fonts.googleapis.com/css?family=Droid+Sans+Mono' rel='stylesheet' type='text/css'>\n    <style type=""text/css"">\n      body {"
LusterniaChatTabs.mpackage,demontools.lua,88,Network Identifiers,http://www.w3.org/TR/html4/loose.dtd,www.w3.org,www.w3.org,Resolved,http://www.w3.org/TR/html4/loose.dtd,"\nlocal htmlHeaderPattern = [=[  <!DOCTYPE HTML PUBLIC ""%-//W3C//DTD HTML 4.01 Transitional//EN""\n""http://www.w3.org/TR/html4/loose.dtd"">\n<html>\n  <head>"
LusterniaChatTabs.mpackage,demontools.lua,92,Network Identifiers,http://fonts.googleapis.com/css%?family=Droid%+Sans%+Mono,fonts.googleapis.com,fonts.googleapis.com,Resolved,http://fonts.googleapis.com/css%?family=Droid%+Sans%+Mono,"  <head>\n    <meta http%-equiv=""Content%-Type"" content=""text/html;charset=utf%-8"" >\n    <link href='http://fonts.googleapis.com/css%?family=Droid%+Sans%+Mono' rel='stylesheet' type='text/css'>\n    <style type=""text/css"">\n      body {"
LusterniaChatTabs.mpackage,emco.lua,1186,Network Identifiers,https://wiki.mudlet.org/w/Manual:Lua_Functions#getTime,wiki.mudlet.org,wiki.mudlet.org,Resolved,https://wiki.mudlet.org/w/Manual:Lua_Functions#getTime,"  if strippedFormat ~= """" then\n    self.ae(funcName,\n            ""format contains invalid time format characters. Please see https://wiki.mudlet.org/w/Manual:Lua_Functions#getTime for formatting information"")\n  else\n    self.timestampFormat = format"
LusterniaChatTabs.mpackage,emco.lua,2137,Unsafe Inputs,load(,,,,,"\n\nfunction EMCO:load()\n  local dirname = getMudletHomeDir() .. ""/EMCO/""\n  local filename = dirname .. self.name .. "".lua"""
LusterniaChatTabs.mpackage,emco.lua,2142,Unsafe Inputs,load(,,,,,"  local configTable = {}\n  if io.exists(filename) then\n    table.load(filename, configTable)\n  else\n    debugc(string.format(""Attempted to load config for EMCO named %s but the file could not be found. Filename: %s"", self.name, filename))"
EMCOChat.mpackage,demontools.lua,61,Network Identifiers,http://www.w3.org/TR/html4/loose.dtd,www.w3.org,www.w3.org,Resolved,http://www.w3.org/TR/html4/loose.dtd,"\nlocal htmlHeader = [=[  <!DOCTYPE HTML PUBLIC ""-//W3C//DTD HTML 4.01 Transitional//EN""\n""http://www.w3.org/TR/html4/loose.dtd"">\n<html>\n  <head>"
EMCOChat.mpackage,demontools.lua,65,Network Identifiers,http://fonts.googleapis.com/css?family=Droid+Sans+Mono,fonts.googleapis.com,fonts.googleapis.com,Resolved,http://fonts.googleapis.com/css?family=Droid+Sans+Mono,"  <head>\n    <meta http-equiv=""Content-Type"" content=""text/html;charset=utf-8"" >\n    <link href='http://fonts.googleapis.com/css?family=Droid+Sans+Mono' rel='stylesheet' type='text/css'>\n    <style type=""text/css"">\n      body {"
EMCOChat.mpackage,demontools.lua,79,Network Identifiers,http://www.w3.org/TR/html4/loose.dtd,www.w3.org,www.w3.org,Resolved,http://www.w3.org/TR/html4/loose.dtd,"\nlocal htmlHeaderPattern = [=[  <!DOCTYPE HTML PUBLIC ""%-//W3C//DTD HTML 4.01 Transitional//EN""\n""http://www.w3.org/TR/html4/loose.dtd"">\n<html>\n  <head>"
EMCOChat.mpackage,demontools.lua,83,Network Identifiers,http://fonts.googleapis.com/css%?family=Droid%+Sans%+Mono,fonts.googleapis.com,fonts.googleapis.com,Resolved,http://fonts.googleapis.com/css%?family=Droid%+Sans%+Mono,"  <head>\n    <meta http%-equiv=""Content%-Type"" content=""text/html;charset=utf%-8"" >\n    <link href='http://fonts.googleapis.com/css%?family=Droid%+Sans%+Mono' rel='stylesheet' type='text/css'>\n    <style type=""text/css"">\n      body {"
EMCOChat.mpackage,emco.lua,1261,Network Identifiers,https://wiki.mudlet.org/w/Manual:Lua_Functions#getTime,wiki.mudlet.org,wiki.mudlet.org,Resolved,https://wiki.mudlet.org/w/Manual:Lua_Functions#getTime,"  if strippedFormat ~= """" then\n    self.ae(funcName,\n            ""format contains invalid time format characters. Please see https://wiki.mudlet.org/w/Manual:Lua_Functions#getTime for formatting information"")\n  else\n    self.timestampFormat = format"
EMCOChat.mpackage,emco.lua,2229,Unsafe Inputs,load(,,,,,"\n\nfunction EMCO:load()\n  local dirname = getMudletHomeDir() .. ""/EMCO/""\n  local filename = dirname .. self.name .. "".lua"""
EMCOChat.mpackage,emco.lua,2234,Unsafe Inputs,load(,,,,,"  local configTable = {}\n  if io.exists(filename) then\n    table.load(filename, configTable)\n  else\n    debugc(string.format(""Attempted to load config for EMCO named %s but the file could not be found. Filename: %s"", self.name, filename))"
dartmudlet-1.8.5.zip,SCRIPTS/scripts_allocs.lua,619,Unsafe Inputs,load(,,,,,\n	Status.allocCurrentDisplay = 1\n	Allocs.load()\n	Allocs.showAllocsCurrentFields(Status.allocCurrentDisplay)\n	Allocs.showAllocsCurrentNumber(Status.allocCurrentDisplay)
dartmudlet-1.8.5.zip,SCRIPTS/scripts_allocs.lua,695,Unsafe Inputs,load(,,,,,"\n		dba.execute(query)\n		Allocs.load()\n		Allocs.showAllocsCurrentFields(Status.allocCurrentDisplay)\n		cecho(""<yellow>Allocs: Allocation copied\n"")"
dartmudlet-1.8.5.zip,SCRIPTS/scripts_allocs.lua,725,Unsafe Inputs,load(,,,,,"\n		dba.execute(query)\n		Allocs.load()\n		Allocs.showAllocsCurrentFields(Status.allocCurrentDisplay)\n		Events.raiseEvent(""checkAllocSetButtonEvent"", {target = ""unknown""})"
dartmudlet-1.8.5.zip,SCRIPTS/scripts_repeat.lua,264,Unsafe Inputs,load(,,,,,	Status.repeatCurrentDisplay = 1\n    Status.repeatCurrentActive = 0\n	Repeat.load()\n	showRepeatCurrentFields(Status.repeatCurrentDisplay)\n	showRepeatCurrentNumber(Status.repeatCurrentDisplay)
dartmudlet-1.8.5.zip,SCRIPTS/scripts_repeat.lua,467,Unsafe Inputs,load(,,,,,\n		dba.execute(query)\n        Repeat.load()\n        if Status.repeatCurrentActive == target then\n            Status.repeatCurrentActive = 0
dartmudlet-1.8.5.zip,SCRIPTS/scripts_repeat.lua,499,Unsafe Inputs,load(,,,,,\n		dba.execute(query)\n        Repeat.load()\n        if Status.repeatCurrentActive == target then\n            Status.repeatCurrentActive = 0
dartmudlet-1.8.5.zip,SCRIPTS/scripts_saver.lua,22,Unsafe Inputs,load(,,,,,"local function setup(args)\n  if io.exists(getMudletHomeDir()..""/dartmudlet.txt"") then\n    table.load(getMudletHomeDir()..""/dartmudlet.txt"", saveTable)\n  else\n    saveTable = {}"
dartmudlet-1.8.5.zip,SCRIPTS/scripts_tabs.lua,1144,Unsafe Inputs,load(,,,,,"\n\nfunction Adjustable.TabWindow:load(slot, dir)\n    if type(self) ~= ""table"" then\n        dir = slot"
dartmudlet-1.8.5.zip,SCRIPTS/scripts_tabs.lua,1156,Unsafe Inputs,load(,,,,,"    local mytable = {}\n    if io.exists(loadDir) then\n        table.load(loadDir, mytable)\n    else\n        return ""No saved settings found at: ""..loadDir"
dartmudlet-1.8.5.zip,SCRIPTS/scripts_tabs.lua,1191,Unsafe Inputs,load(,,,,,"                tempStyleWindow:createTempWindow(nil, k)\n            end\n            Adjustable.TabWindow.all[k].container.container:load(slot, dir)\n            if v.windowname ~= ""main"" then\n                Adjustable.TabWindow.all[k].container.container:changeContainer(Geyser.windowList[v.windowname..""Container""].windowList[v.windowname])"
dartmudlet-1.8.5.zip,SCRIPTS/scripts_tabs.lua,1238,Unsafe Inputs,load(,,,,,"                    end\n                    \n                    myTab:load(slot, dir)\n                end\n            end"
dartmudlet-1.8.5.zip,_core.lua,19,Unsafe Inputs,dofile(,,,,,"	for file in lfs.dir(aliases_directory) do\n		if lfs.attributes(aliases_directory..file,""mode"") == ""file"" then\n			table.insert(modules, dofile(aliases_directory..file))\n		end\n	end"
dartmudlet-1.8.5.zip,_core.lua,26,Unsafe Inputs,dofile(,,,,,"	for file in lfs.dir(scripts_directory) do\n		if lfs.attributes(scripts_directory..file,""mode"") == ""file"" then\n			table.insert(modules, dofile(scripts_directory..file))\n		end\n	end"
dartmudlet-1.8.5.zip,_core.lua,33,Unsafe Inputs,dofile(,,,,,"	for file in lfs.dir(timers_directory) do\n		if lfs.attributes(timers_directory..file,""mode"") == ""file"" then\n			table.insert(modules, dofile(timers_directory..file))\n		end\n	end"
dartmudlet-1.8.5.zip,_core.lua,40,Unsafe Inputs,dofile(,,,,,"	for file in lfs.dir(triggers_directory) do\n		if lfs.attributes(triggers_directory..file,""mode"") == ""file"" then\n			table.insert(modules, dofile(triggers_directory..file))\n		end\n	end"
dartmudlet-1.8.5.zip,_core.lua,47,Unsafe Inputs,dofile(,,,,,"	for file in lfs.dir(ui_directory) do\n		if lfs.attributes(ui_directory..file,""mode"") == ""file"" then\n			table.insert(modules, dofile(ui_directory..file))\n		end\n	end"
dartmudlet-1.8.5.zip,_core.lua,60,Unsafe Inputs,load(,,,,,"	isFirstLoad = false\n\n	_Core.load()\n\n	send(""score"", false)"
dartmudlet-1.8.5.zip,_core.lua,76,Unsafe Inputs,load(,,,,,"	for i,module in ipairs(modules) do\n		if module.load then\n			module.load()\n		end\n	end"
