package,file,line_number,category,matched,context
copyToAda.mpackage,config.lua,3,Network Identifiers,https://ada-young.com/pastebin/,"mpackage = [[copyToAda]]
author = [[Demonnic]]
title = [[Copy selected text as HTML to https://ada-young.com/pastebin/ using https://ada-young.com/pastebin/api/v1/about ]]
version = [[1.0.0]]
created = [[2024-12-28T04:18:51+0000]]"
Achaean System.mpackage,curing/remedies.lua,585,Unsafe Inputs,dofile(,"
    
    dofile(getMudletHomeDir() .. ""/Achaean System/curing/remedies.lua"")

    "
Achaean System.mpackage,defenses/defenses.lua,347,Unsafe Inputs,dofile(,"
    
    dofile(getMudletHomeDir() .. ""/Achaean System/defenses/defenses.lua"")  

    "
Achaean System.mpackage,hunting/hunting.lua,2185,Unsafe Inputs,dofile(,"	
function reloadHuntingFile()	
  dofile(getMudletHomeDir() .. ""/Achaean System/hunting/hunting.lua"")  
  echo(""\nHunting Loaded"")
end"
Achaean System.mpackage,system/libs/deps/dkjson.lua,14,Network Identifiers,http://dkolf.de/dkjson-lua/>.,"
For the documentation see the corresponding readme.txt or visit
<http://dkolf.de/dkjson-lua/>.

You can contact the author by sending an e-mail to 'david' at the"
Achaean System.mpackage,system/libs/deps/preferences.lua,133,Unsafe Inputs,load(,"  
  
  function preferences.load(pkg, file, defaults) end

  "
Achaean System.mpackage,system/libs/deps/version.lua,1,Network Identifiers,2.00.00.05,return '2.00.00.05-pre-master'
Achaean System.mpackage,system/libs/luarocks/admin/index.lua,64,Network Identifiers,http://www.luarocks.org,"<h1>Available rocks</h1>
<p>
Lua modules available from this location for use with <a href=""http://www.luarocks.org"">LuaRocks</a>:
</p>
<table class=""main"">"
Achaean System.mpackage,system/libs/luarocks/cmd.lua,175,Network Identifiers,https://github.com/luarocks/luarocks/issues).\n,"   end
   return debug.traceback(""LuaRocks ""..cfg.program_version..
      "" bug (please report at https://github.com/luarocks/luarocks/issues).\n""..
      mode..""\n""..err, 2)
end"
Achaean System.mpackage,system/libs/luarocks/cmd.lua,254,Unsafe Inputs,loadfile(,"         for _, d in ipairs(dirs) do
            local f = dir.path(d, ""default-lua-version.lua"")
            local mod, err = loadfile(f, ""t"")
            if mod then
               local pok, ver = pcall(mod)"
Achaean System.mpackage,system/libs/luarocks/cmd/config.lua,50,Network Identifiers,https://github.com/luarocks/luarocks/wiki/Config-file-format,"
  Example: luarocks config]], util.see_also([[
   https://github.com/luarocks/luarocks/wiki/Config-file-format
   for detailed information on the LuaRocks config file format.
]]))"
Achaean System.mpackage,system/libs/luarocks/cmd/write_rockspec.lua,124,Process Spawning,io.popen(,"   local function detect_url_from_command(program, args, directory)
      local command = fs.Q(cfg.variables[program:upper()]).. "" ""..args
      local pipe = io.popen(fs.command_at(directory, fs.quiet_stderr(command)))
      if not pipe then return nil end
      local url = pipe:read(""*a""):match(""^([^\r\n]+)"")"
Achaean System.mpackage,system/libs/luarocks/core/cfg.lua,205,Network Identifiers,https://luarocks.org,"      rocks_servers = {
         {
           ""https://luarocks.org"",
           ""https://raw.githubusercontent.com/rocks-moonscript-org/moonrocks-mirror/master/"",
           ""https://loadk.com/luarocks/"","
Achaean System.mpackage,system/libs/luarocks/core/cfg.lua,206,Network Identifiers,https://raw.githubusercontent.com/rocks-moonscript-org/moonrocks-mirror/master/,"         {
           ""https://luarocks.org"",
           ""https://raw.githubusercontent.com/rocks-moonscript-org/moonrocks-mirror/master/"",
           ""https://loadk.com/luarocks/"",
         }"
Achaean System.mpackage,system/libs/luarocks/core/cfg.lua,207,Network Identifiers,https://loadk.com/luarocks/,"           ""https://luarocks.org"",
           ""https://raw.githubusercontent.com/rocks-moonscript-org/moonrocks-mirror/master/"",
           ""https://loadk.com/luarocks/"",
         }
      },"
Achaean System.mpackage,system/libs/luarocks/core/cfg.lua,213,Network Identifiers,https://luarocks.org,"
      upload = {
         server = ""https://luarocks.org"",
         tool_version = ""1.0.0"",
         api_version = ""1"","
Achaean System.mpackage,system/libs/luarocks/core/cfg.lua,444,Process Spawning,io.popen(,"         
         
         local pipe = io.popen(""cygpath 
         local mingw_prefix = pipe:read(""*l"")
         pipe:close()"
Achaean System.mpackage,system/libs/luarocks/core/persist.lua,26,Unsafe Inputs,loadstring(,"   local chunk, ran
   if _VERSION == ""Lua 5.1"" then 
      chunk, err = loadstring(str, filename)
      if chunk then
         setfenv(chunk, env)"
Achaean System.mpackage,system/libs/luarocks/core/persist.lua,32,Unsafe Inputs,load(,"      end
   else 
      chunk, err = load(str, filename, ""t"", env)
      if chunk then
         ran, err = pcall(chunk)"
Achaean System.mpackage,system/libs/luarocks/core/util.lua,20,Process Spawning,os.execute(,"                   and (os.getenv(""TMP"") .. ""/luarocks-"" .. tostring(math.floor(math.random() * 10000)))
                   or os.tmpname()
   os.execute(cmd .. "" > "" .. tmpfile)
   local fd = io.open(tmpfile, ""rb"")
   if not fd then"
Achaean System.mpackage,system/libs/luarocks/deplocks.lua,32,Unsafe Inputs,load(,"end

function deplocks.load(root_rock_name, dirname)
   if deptable_mode ~= ""start"" then
      return true, nil"
Achaean System.mpackage,system/libs/luarocks/deps.lua,297,Unsafe Inputs,load(,"   local rocks_provided = rockspec.rocks_provided

   local ok, filename, err = deplocks.load(name, deplock_dir or ""."")
   if filename then
      util.printout(""Using dependencies pinned in lockfile: "" .. filename)"
Achaean System.mpackage,system/libs/luarocks/fetch/git.lua,19,Process Spawning,io.popen(,"local function git_version(git_cmd)
   if not cached_git_version then
      local version_line = io.popen(fs.Q(git_cmd)..' 
      local version_string = version_line:match('%d-%.%d+%.?%d*')
      cached_git_version = vers.parse_version(version_string)"
Achaean System.mpackage,system/libs/luarocks/fetch/git.lua,64,Process Spawning,io.popen(,"      return nil
   end
   local pd = io.popen(fs.command_at(fs.current_dir(), fs.Q(git_cmd).."" log 
   if not pd then
      return nil"
Achaean System.mpackage,system/libs/luarocks/fetch/sscm.lua,27,Process Spawning,io.popen(,"   
   local working_dir
   local tmp = io.popen(string.format(sscm_cmd..[[ property ""/"" -d -b%s -p%s]], branch, repository))
   for line in tmp:lines() do
      "
Achaean System.mpackage,system/libs/luarocks/fs/lua.lua,328,Process Spawning,os.execute(,"
function fs_lua.execute_string(cmd)
   local code = os.execute(cmd)
   return (code == 0 or code == true)
end"
Achaean System.mpackage,system/libs/luarocks/fs/lua.lua,1261,Unsafe Inputs,loadfile(,"  local lua = fs.Q(cfg.variables.LUA)  
  
  local result = fs.execute_string(lua..[[ -e ""if loadfile(']]..filename..[[') then os.exit(0) else os.exit(1) end""]])
  return (result == true)
end"
Achaean System.mpackage,system/libs/luarocks/fs/tools.lua,58,Process Spawning,io.popen(,"      local current = cache_pwd
      if not current then
         local pipe = io.popen(fs.quiet_stderr(vars.PWD))
         current = pipe:read(""*a""):gsub(""^%s*"", """"):gsub(""%s*$"", """")
         pipe:close()"
Achaean System.mpackage,system/libs/luarocks/fs/tools.lua,121,Process Spawning,os.execute(,"      cmd = fs.command_at(current, cmd)
   end
   local code = os.execute(cmd)
   if code == 0 or code == true then
      return true"
Achaean System.mpackage,system/libs/luarocks/fs/tools.lua,134,Process Spawning,io.popen(,"
function tools.dir_iterator(at)
   local pipe = io.popen(fs.command_at(at, vars.LS, true))
   for file in pipe:lines() do
      if file ~= ""."" and file ~= "".."" then"
Achaean System.mpackage,system/libs/luarocks/fs/tools.lua,209,Process Spawning,io.popen(,"   end

   local pipe = io.popen(md5checker.."" ""..fs.Q(fs.absolute_name(file)))
   local computed = pipe:read(""*l"")
   pipe:close()"
Achaean System.mpackage,system/libs/luarocks/fs/unix/tools.lua,117,Process Spawning,io.popen(,"   end
   local result = {}
   local pipe = io.popen(fs.command_at(at, fs.quiet_stderr(vars.FIND.."" *"")))
   for file in pipe:lines() do
      table.insert(result, file)"
Achaean System.mpackage,system/libs/luarocks/fs/unix/tools.lua,200,Process Spawning,io.popen(,"         return umask_cache
      end
      local fd = assert(io.popen(""umask -S""))
      local umask = assert(fd:read(""*a""))
      fd:close()"
Achaean System.mpackage,system/libs/luarocks/fs/unix/tools.lua,263,Process Spawning,io.popen(,"
   local template = (os.getenv(""TMPDIR"") or ""/tmp"") .. ""/luarocks_"" .. name_pattern:gsub(""/"", ""_"") .. ""-XXXXXX""
   local pipe = io.popen(vars.MKTEMP.."" -d ""..fs.Q(template))
   local dirname = pipe:read(""*l"")
   pipe:close()"
Achaean System.mpackage,system/libs/luarocks/fs/unix/tools.lua,301,Process Spawning,io.popen(,"      return user
   end
   local pd = io.popen(""whoami"", ""r"")
   if not pd then
      return """""
Achaean System.mpackage,system/libs/luarocks/fs/win32/tools.lua,131,Process Spawning,io.popen(,"   end
   local result = {}
   local pipe = io.popen(fs.command_at(at, fs.quiet_stderr(vars.FIND), true))
   for file in pipe:lines() do
      "
Achaean System.mpackage,system/libs/luarocks/fs/win32/tools.lua,224,Process Spawning,io.popen(,"   }
   local result = {}
   local fd = assert(io.popen(""wmic UserAccount get name""))
   for user in fd:lines() do
      user = user:gsub(""%s+$"", """")"
Achaean System.mpackage,system/libs/luarocks/vendor/dkjson.lua,14,Network Identifiers,http://dkolf.de/src/dkjson-lua.fsl/>.,"
For the documentation see the corresponding readme.txt or visit
<http://dkolf.de/src/dkjson-lua.fsl/>.

You can contact the author by sending an e-mail to 'david' at the"
Achaean System.mpackage,system/system.lua,200,Unsafe Inputs,dofile(,"function reloadSystem()
  
  dofile(getMudletHomeDir() .. ""/Achaean System/system/system.lua"")
  cecho(""\n<green>Configuration File Loaded.\n"")
end"
AchaeaChatTabs.mpackage,demontools.lua,61,Network Identifiers,http://www.w3.org/TR/html4/loose.dtd,"
local htmlHeader = [=[  <!DOCTYPE HTML PUBLIC ""-//W3C//DTD HTML 4.01 Transitional//EN""
""http://www.w3.org/TR/html4/loose.dtd"">
<html>
  <head>"
AchaeaChatTabs.mpackage,demontools.lua,65,Network Identifiers,http://fonts.googleapis.com/css?family=Droid+Sans+Mono,"  <head>
    <meta http-equiv=""Content-Type"" content=""text/html;charset=utf-8"" >
    <link href='http://fonts.googleapis.com/css?family=Droid+Sans+Mono' rel='stylesheet' type='text/css'>
    <style type=""text/css"">
      body {"
AchaeaChatTabs.mpackage,demontools.lua,79,Network Identifiers,http://www.w3.org/TR/html4/loose.dtd,"
local htmlHeaderPattern = [=[  <!DOCTYPE HTML PUBLIC ""%-//W3C//DTD HTML 4.01 Transitional//EN""
""http://www.w3.org/TR/html4/loose.dtd"">
<html>
  <head>"
AchaeaChatTabs.mpackage,demontools.lua,83,Network Identifiers,http://fonts.googleapis.com/css%?family=Droid%+Sans%+Mono,"  <head>
    <meta http%-equiv=""Content%-Type"" content=""text/html;charset=utf%-8"" >
    <link href='http://fonts.googleapis.com/css%?family=Droid%+Sans%+Mono' rel='stylesheet' type='text/css'>
    <style type=""text/css"">
      body {"
AchaeaChatTabs.mpackage,emco.lua,1261,Network Identifiers,https://wiki.mudlet.org/w/Manual:Lua_Functions#getTime,"  if strippedFormat ~= """" then
    self.ae(funcName,
            ""format contains invalid time format characters. Please see https://wiki.mudlet.org/w/Manual:Lua_Functions#getTime for formatting information"")
  else
    self.timestampFormat = format"
AchaeaChatTabs.mpackage,emco.lua,2229,Unsafe Inputs,load(,"

function EMCO:load()
  local dirname = getMudletHomeDir() .. ""/EMCO/""
  local filename = dirname .. self.name .. "".lua"""
AchaeaChatTabs.mpackage,emco.lua,2234,Unsafe Inputs,load(,"  local configTable = {}
  if io.exists(filename) then
    table.load(filename, configTable)
  else
    debugc(string.format(""Attempted to load config for EMCO named %s but the file could not be found. Filename: %s"", self.name, filename))"
dartmudlet-1.8.5.zip,SCRIPTS/scripts_allocs.lua,619,Unsafe Inputs,load(,"
	Status.allocCurrentDisplay = 1
	Allocs.load()
	Allocs.showAllocsCurrentFields(Status.allocCurrentDisplay)
	Allocs.showAllocsCurrentNumber(Status.allocCurrentDisplay)"
dartmudlet-1.8.5.zip,SCRIPTS/scripts_allocs.lua,695,Unsafe Inputs,load(,"
		dba.execute(query)
		Allocs.load()
		Allocs.showAllocsCurrentFields(Status.allocCurrentDisplay)
		cecho(""<yellow>Allocs: Allocation copied\n"")"
dartmudlet-1.8.5.zip,SCRIPTS/scripts_allocs.lua,725,Unsafe Inputs,load(,"
		dba.execute(query)
		Allocs.load()
		Allocs.showAllocsCurrentFields(Status.allocCurrentDisplay)
		Events.raiseEvent(""checkAllocSetButtonEvent"", {target = ""unknown""})"
dartmudlet-1.8.5.zip,SCRIPTS/scripts_repeat.lua,264,Unsafe Inputs,load(,"	Status.repeatCurrentDisplay = 1
    Status.repeatCurrentActive = 0
	Repeat.load()
	showRepeatCurrentFields(Status.repeatCurrentDisplay)
	showRepeatCurrentNumber(Status.repeatCurrentDisplay)"
dartmudlet-1.8.5.zip,SCRIPTS/scripts_repeat.lua,467,Unsafe Inputs,load(,"
		dba.execute(query)
        Repeat.load()
        if Status.repeatCurrentActive == target then
            Status.repeatCurrentActive = 0"
dartmudlet-1.8.5.zip,SCRIPTS/scripts_repeat.lua,499,Unsafe Inputs,load(,"
		dba.execute(query)
        Repeat.load()
        if Status.repeatCurrentActive == target then
            Status.repeatCurrentActive = 0"
dartmudlet-1.8.5.zip,SCRIPTS/scripts_saver.lua,22,Unsafe Inputs,load(,"local function setup(args)
  if io.exists(getMudletHomeDir()..""/dartmudlet.txt"") then
    table.load(getMudletHomeDir()..""/dartmudlet.txt"", saveTable)
  else
    saveTable = {}"
dartmudlet-1.8.5.zip,SCRIPTS/scripts_tabs.lua,1144,Unsafe Inputs,load(,"

function Adjustable.TabWindow:load(slot, dir)
    if type(self) ~= ""table"" then
        dir = slot"
dartmudlet-1.8.5.zip,SCRIPTS/scripts_tabs.lua,1156,Unsafe Inputs,load(,"    local mytable = {}
    if io.exists(loadDir) then
        table.load(loadDir, mytable)
    else
        return ""No saved settings found at: ""..loadDir"
dartmudlet-1.8.5.zip,SCRIPTS/scripts_tabs.lua,1191,Unsafe Inputs,load(,"                tempStyleWindow:createTempWindow(nil, k)
            end
            Adjustable.TabWindow.all[k].container.container:load(slot, dir)
            if v.windowname ~= ""main"" then
                Adjustable.TabWindow.all[k].container.container:changeContainer(Geyser.windowList[v.windowname..""Container""].windowList[v.windowname])"
dartmudlet-1.8.5.zip,SCRIPTS/scripts_tabs.lua,1238,Unsafe Inputs,load(,"                    end
                    
                    myTab:load(slot, dir)
                end
            end"
dartmudlet-1.8.5.zip,_core.lua,19,Unsafe Inputs,dofile(,"	for file in lfs.dir(aliases_directory) do
		if lfs.attributes(aliases_directory..file,""mode"") == ""file"" then
			table.insert(modules, dofile(aliases_directory..file))
		end
	end"
dartmudlet-1.8.5.zip,_core.lua,26,Unsafe Inputs,dofile(,"	for file in lfs.dir(scripts_directory) do
		if lfs.attributes(scripts_directory..file,""mode"") == ""file"" then
			table.insert(modules, dofile(scripts_directory..file))
		end
	end"
dartmudlet-1.8.5.zip,_core.lua,33,Unsafe Inputs,dofile(,"	for file in lfs.dir(timers_directory) do
		if lfs.attributes(timers_directory..file,""mode"") == ""file"" then
			table.insert(modules, dofile(timers_directory..file))
		end
	end"
dartmudlet-1.8.5.zip,_core.lua,40,Unsafe Inputs,dofile(,"	for file in lfs.dir(triggers_directory) do
		if lfs.attributes(triggers_directory..file,""mode"") == ""file"" then
			table.insert(modules, dofile(triggers_directory..file))
		end
	end"
dartmudlet-1.8.5.zip,_core.lua,47,Unsafe Inputs,dofile(,"	for file in lfs.dir(ui_directory) do
		if lfs.attributes(ui_directory..file,""mode"") == ""file"" then
			table.insert(modules, dofile(ui_directory..file))
		end
	end"
dartmudlet-1.8.5.zip,_core.lua,60,Unsafe Inputs,load(,"	isFirstLoad = false

	_Core.load()

	send(""score"", false)"
dartmudlet-1.8.5.zip,_core.lua,76,Unsafe Inputs,load(,"	for i,module in ipairs(modules) do
		if module.load then
			module.load()
		end
	end"
MDK.mpackage,demontools.lua,61,Network Identifiers,http://www.w3.org/TR/html4/loose.dtd,"
local htmlHeader = [=[  <!DOCTYPE HTML PUBLIC ""-//W3C//DTD HTML 4.01 Transitional//EN""
""http://www.w3.org/TR/html4/loose.dtd"">
<html>
  <head>"
MDK.mpackage,demontools.lua,65,Network Identifiers,http://fonts.googleapis.com/css?family=Droid+Sans+Mono,"  <head>
    <meta http-equiv=""Content-Type"" content=""text/html;charset=utf-8"" >
    <link href='http://fonts.googleapis.com/css?family=Droid+Sans+Mono' rel='stylesheet' type='text/css'>
    <style type=""text/css"">
      body {"
MDK.mpackage,demontools.lua,79,Network Identifiers,http://www.w3.org/TR/html4/loose.dtd,"
local htmlHeaderPattern = [=[  <!DOCTYPE HTML PUBLIC ""%-//W3C//DTD HTML 4.01 Transitional//EN""
""http://www.w3.org/TR/html4/loose.dtd"">
<html>
  <head>"
MDK.mpackage,demontools.lua,83,Network Identifiers,http://fonts.googleapis.com/css%?family=Droid%+Sans%+Mono,"  <head>
    <meta http%-equiv=""Content%-Type"" content=""text/html;charset=utf%-8"" >
    <link href='http://fonts.googleapis.com/css%?family=Droid%+Sans%+Mono' rel='stylesheet' type='text/css'>
    <style type=""text/css"">
      body {"
MDK.mpackage,demontools.lua,98,Unsafe Inputs,loadstring(,"
local function getValueAt(accessString)
  local ok, err = pcall(loadstring(""return "" .. tostring(accessString)))
  if ok then return err end
  return nil, err"
MDK.mpackage,echofile.lua,15,Unsafe Inputs,loadstring(,"if _VERSION == ""Lua 5.1"" then
  load = function(code, name, _, env)
    local fn, err = loadstring(code, name)
    if fn then
      setfenv(fn, env)"
MDK.mpackage,echofile.lua,46,Unsafe Inputs,load(,"      end,
    })
    local fn, err = load(""return "" .. code, ""expression `"" .. code .. ""`"", ""t"", exp_env)
    if fn then
      return tostring(fn())"
MDK.mpackage,emco.lua,1261,Network Identifiers,https://wiki.mudlet.org/w/Manual:Lua_Functions#getTime,"  if strippedFormat ~= """" then
    self.ae(funcName,
            ""format contains invalid time format characters. Please see https://wiki.mudlet.org/w/Manual:Lua_Functions#getTime for formatting information"")
  else
    self.timestampFormat = format"
MDK.mpackage,emco.lua,2229,Unsafe Inputs,load(,"

function EMCO:load()
  local dirname = getMudletHomeDir() .. ""/EMCO/""
  local filename = dirname .. self.name .. "".lua"""
MDK.mpackage,emco.lua,2234,Unsafe Inputs,load(,"  local configTable = {}
  if io.exists(filename) then
    table.load(filename, configTable)
  else
    debugc(string.format(""Attempted to load config for EMCO named %s but the file could not be found. Filename: %s"", self.name, filename))"
MDK.mpackage,loginator.lua,59,Network Identifiers,http://www.w3.org/TR/html4/loose.dtd,"
local htmlHeaderTemplate = [=[  <!DOCTYPE HTML PUBLIC ""-//W3C//DTD HTML 4.01 Transitional//EN""
""http://www.w3.org/TR/html4/loose.dtd"">
<html>
  <head>"
MDK.mpackage,loginator.lua,63,Network Identifiers,http://fonts.googleapis.com/css?family=Droid+Sans+Mono,"  <head>
    <meta http-equiv=""Content-Type"" content=""text/html;charset=utf-8"" >
    <link href='http://fonts.googleapis.com/css?family=Droid+Sans+Mono' rel='stylesheet' type='text/css'>
    <style type=""text/css"">
      body {"
MDK.mpackage,loginator.lua,410,External Communications,openUrl(,"
function Loginator:open()
  openUrl(self:getFullFilename())
end
"
MDK.mpackage,loginator.lua,415,External Communications,openUrl(,"
function Loginator:openDir()
  openUrl(self:getPath())
end
"
MDK.mpackage,spinbox.lua,16,Network Identifiers,https://demonnic.github.io/image-assets/uparrow.png,"  inactiveButtonColor = ""DimGray"",
  integer = true,
  upArrowLocation = ""https://demonnic.github.io/image-assets/uparrow.png"",
  downArrowLocation = ""https://demonnic.github.io/image-assets/downarrow.png"",
  color = ""#202020"""
MDK.mpackage,spinbox.lua,17,Network Identifiers,https://demonnic.github.io/image-assets/downarrow.png,"  integer = true,
  upArrowLocation = ""https://demonnic.github.io/image-assets/uparrow.png"",
  downArrowLocation = ""https://demonnic.github.io/image-assets/downarrow.png"",
  color = ""#202020""
}"
MDK.mpackage,spinbox.lua,309,External Communications,downloadFile(,"    end
    if upURL:match(""^http"") then
      self:downloadFile(upURL, upFile)
    elseif io.exists(upURL) then
      upFile = upURL"
MDK.mpackage,spinbox.lua,323,External Communications,downloadFile(,"    end
    if downURL:match(""^http"") then
      self:downloadFile(downURL, downFile)
    elseif io.exists(downURL) then
      downFile = downURL"
MDK.mpackage,spinbox.lua,346,External Communications,downloadFile(,"

function spinbox:downloadFile(url, fileName)
  local parts = fileName:split(""/"")
  parts[#parts] = nil"
MDK.mpackage,spinbox.lua,371,External Communications,downloadFile(,"  registerNamedEventHandler(uname, handlerName .. ""done"", ""sysDownloadDone"", handler, true)
  registerNamedEventHandler(uname, handlerName .. ""error"", ""sysDownloadError"", handler, true)
  downloadFile(fileName, url)
end
"
MDK.mpackage,spinbox.lua,379,Unsafe Inputs,load(,"  local locations = {}
  if io.exists(saveFile) then
    table.load(saveFile, locations)
  end
  return locations"
MDK.mpackage,sug.lua,20,Unsafe Inputs,loadstring(,"
local function getValueAt(accessString)
  local ok, err = pcall(loadstring(""return "" .. tostring(accessString)))
  if ok then return err end
  return nil, err"
MDK.mpackage,timergauge.lua,236,Unsafe Inputs,loadstring(,"  local hooktype = type(hook)
  if hooktype == ""string"" then
    local f, e = loadstring(""return "" .. hook)
    if not f then
      f, e = loadstring(hook)"
MDK.mpackage,timergauge.lua,238,Unsafe Inputs,loadstring(,"    local f, e = loadstring(""return "" .. hook)
    if not f then
      f, e = loadstring(hook)
    end
    if not f then"
i18n-support-for-mudlet-scripts.mpackage,i18n/init.lua,174,Unsafe Inputs,load(,"end

function i18n.load(data)
  recursiveLoad(nil, data)
end"
i18n-support-for-mudlet-scripts.mpackage,i18n/init.lua,179,Unsafe Inputs,loadfile(,"
function i18n.loadFile(path)
  local chunk = assert(loadfile(path))
  local data = chunk()
  i18n.load(data)"
i18n-support-for-mudlet-scripts.mpackage,i18n/init.lua,181,Unsafe Inputs,load(,"  local chunk = assert(loadfile(path))
  local data = chunk()
  i18n.load(data)
end
"
MedUI.mpackage,demontools.lua,61,Network Identifiers,http://www.w3.org/TR/html4/loose.dtd,"
local htmlHeader = [=[  <!DOCTYPE HTML PUBLIC ""-//W3C//DTD HTML 4.01 Transitional//EN""
""http://www.w3.org/TR/html4/loose.dtd"">
<html>
  <head>"
MedUI.mpackage,demontools.lua,65,Network Identifiers,http://fonts.googleapis.com/css?family=Droid+Sans+Mono,"  <head>
    <meta http-equiv=""Content-Type"" content=""text/html;charset=utf-8"" >
    <link href='http://fonts.googleapis.com/css?family=Droid+Sans+Mono' rel='stylesheet' type='text/css'>
    <style type=""text/css"">
      body {"
MedUI.mpackage,demontools.lua,79,Network Identifiers,http://www.w3.org/TR/html4/loose.dtd,"
local htmlHeaderPattern = [=[  <!DOCTYPE HTML PUBLIC ""%-//W3C//DTD HTML 4.01 Transitional//EN""
""http://www.w3.org/TR/html4/loose.dtd"">
<html>
  <head>"
MedUI.mpackage,demontools.lua,83,Network Identifiers,http://fonts.googleapis.com/css%?family=Droid%+Sans%+Mono,"  <head>
    <meta http%-equiv=""Content%-Type"" content=""text/html;charset=utf%-8"" >
    <link href='http://fonts.googleapis.com/css%?family=Droid%+Sans%+Mono' rel='stylesheet' type='text/css'>
    <style type=""text/css"">
      body {"
MedUI.mpackage,demontools.lua,98,Unsafe Inputs,loadstring(,"
local function getValueAt(accessString)
  local ok, err = pcall(loadstring(""return "" .. tostring(accessString)))
  if ok then return err end
  return nil, err"
MedUI.mpackage,emco.lua,1261,Network Identifiers,https://wiki.mudlet.org/w/Manual:Lua_Functions#getTime,"    if strippedFormat ~= """" then
      self.ae(funcName,
              ""format contains invalid time format characters. Please see https://wiki.mudlet.org/w/Manual:Lua_Functions#getTime for formatting information"")
    else
      self.timestampFormat = format"
MedUI.mpackage,emco.lua,2229,Unsafe Inputs,load(,"  
  
  function EMCO:load()
    local dirname = getMudletHomeDir() .. ""/EMCO/""
    local filename = dirname .. self.name .. "".lua"""
MedUI.mpackage,emco.lua,2234,Unsafe Inputs,load(,"    local configTable = {}
    if io.exists(filename) then
      table.load(filename, configTable)
    else
      debugc(string.format(""Attempted to load config for EMCO named %s but the file could not be found. Filename: %s"", self.name, filename))"
PRS.mpackage,AdjustableTabWindow.lua,1114,Unsafe Inputs,load(,"

function Adjustable.TabWindow:load(slot, dir)
    if type(self) ~= ""table"" then
        dir = slot"
